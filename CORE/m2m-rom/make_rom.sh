#!/usr/bin/env bash

##############################################################################
# Check if qasm is available
##############################################################################

if [ ! -f ../../M2M/QNICE/assembler/qasm ]; then
    echo ""
    echo "ERROR: QNICE assembler ../../M2M/QNICE/assembler/qasm not found."
    echo ""
    echo "Things to try:"
    echo "1. This repository has dependencies: Did you run"
    echo "       git submodule update --init --recursive"
    echo "   after cloning the repository? If not, run it now."
    echo ""
    echo "2. Build the QNICE toolchain. Answer all questions by pressing ENTER."
    echo "       cd ../../M2M/QNICE/tools"
    echo "       ./make-toolchain.sh"
    echo ""
    exit
fi;

##############################################################################
# M2M framework: Generate globals.asm
##############################################################################


{
    echo "; DO NOT MANUALLY EDIT"
    echo "; AUTOGENERATED BY ./make-asm.sh"
    echo "; These constants are taken from ../vhdl/globals.vhd"
    echo ""
} > globals.asm

awk '/constant C_VDNUM/ {gsub(/.*:=|;.*/, "", $0); split($0, a, " "); val=a[1]; if (val+0 == 0) val=1; printf("VDRIVES_MAX                 .EQU %s\n", val)}' ../vhdl/globals.vhd >> globals.asm
awk '/constant C_CRTROMS_MAN_NUM/ {gsub(/.*:=|;.*/, "", $0); split($0, a, " "); val=a[1]; if (val+0 == 0) val=1; printf("CRTROM_MAN_MAX              .EQU %s\n", val)}' ../vhdl/globals.vhd >> globals.asm
awk '/constant C_CRTROMS_AUTO_NUM/ {gsub(/.*:=|;.*/, "", $0); split($0, a, " "); val=a[1]; if (val+0 == 0) val=1; printf("CRTROM_AUT_MAX              .EQU %s\n", val)}' ../vhdl/globals.vhd >> globals.asm

##############################################################################
# M2M framework: Generate shell_fhandles.asm
##############################################################################

{
    echo "; DO NOT MANUALLY EDIT"
    echo "; AUTOGENERATED BY ./make-asm.sh"
    echo "; These file handlers are generated based on VDRIVES_MAX and CRTROM_MAN_MAX"
    echo ""
} > shell_fhandles.asm

vdrives_max=$(awk '/constant C_VDNUM/ {gsub(/.*:=|;.*/, "", $0); split($0, a, " "); print a[1]}' ../vhdl/globals.vhd)
crtrom_man_max=$(awk '/constant C_CRTROMS_MAN_NUM/ {gsub(/.*:=|;.*/, "", $0); split($0, a, " "); print a[1]}' ../vhdl/globals.vhd)

if [ $vdrives_max -eq 0 ]; then vdrives_max=1; fi
if [ $crtrom_man_max -eq 0 ]; then crtrom_man_max=1; fi

for ((i=1; i<=vdrives_max; i++))
do
    echo "HANDLE_VD_FILE$i    .BLOCK  FAT32\$FDH_STRUCT_SIZE"
done >> shell_fhandles.asm

for ((i=1; i<=crtrom_man_max; i++))
do
    echo "HANDLE_RM_FILE$i    .BLOCK  FAT32\$FDH_STRUCT_SIZE"
done >> shell_fhandles.asm

##############################################################################
# M2M framework: Generate shell_fh_ptrs.asm
##############################################################################

{
    echo "; DO NOT MANUALLY EDIT"
    echo "; AUTOGENERATED BY ./make-asm.sh"
    echo "; These are pointers to the file handles for the virtual drives and manually loadable CRTs/ROMs"
    echo ""
} > shell_fh_ptrs.asm

print_file_handles() {
    local label=$1
    local pointer_name=$2
    local count=$3

    printf "%-20s .DW  " "$label" >> shell_fh_ptrs.asm
    for ((i=1;i<=count;i++)); do
        printf "%s%d" "$pointer_name" $i >> shell_fh_ptrs.asm
        if (( i % 3 == 0 && i < count )); then
            printf ",\n%-20s .DW  " " " >> shell_fh_ptrs.asm
        elif (( i % 3 != 0 && i < count )); then
            printf ", " >> shell_fh_ptrs.asm
        fi
    done
    printf "\n" >> shell_fh_ptrs.asm
}

# Generate shell_fh_ptrs.asm
print_file_handles "HNDL_VD_FILES" "HANDLE_VD_FILE" $vdrives_max
print_file_handles "HNDL_RM_FILES" "HANDLE_RM_FILE" $crtrom_man_max

##############################################################################
# M2M framework: Assemble and generate various output files:
#   m2m-rom.def: QNICE Monitor operating system calls
#   m2m-rom.lis: List file containing the complete listing & assembled code
#   m2m-rom.out: File that can be loaded in the QNICE Monitor using M/L
#   m2m-rom.rom: Vivado ROM compatible 16-bit binary
##############################################################################

../../M2M/QNICE/assembler/asm m2m-rom.asm
